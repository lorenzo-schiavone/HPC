elements = load("Cubo_591.tetra");
nodes = load("Cubo_591.coor");


D = [1,1,1];
v = [5,5,5];

tot_el = size(elements,1);
tot_nodes = size(nodes, 1);
volumes = zeros(tot_el, 1);
tic
%% computing areas of each element
parfor i = 1:tot_el
    matrix = zeros(4,4);
    for j =1:4
        matrix(j,:)= [1 nodes(elements(i, j), :)];
    end
    volumes(i,1)=det(matrix)/6;
end


I = cell(tot_el,1); J = cell(tot_el,1); Aval = cell(tot_el,1);
Bval = cell(tot_el,1); Sval = cell(tot_el,1);

for kk = 1:tot_el
    el_nodes = elements(kk, :);
    vol = volumes(kk);

    a = zeros(4,1);
    b = zeros(4,1);
    c = zeros(4,1);
    d = zeros(4,1);
    for i=1:4
        nj = nodes(el_nodes(mod(i,4)+1),:);
        nk = nodes(el_nodes(mod(i+1,4)+1),:);
        nm = nodes(el_nodes(mod(i+2,4)+1),:);
        a(i) = det([nj;nk;nm]);
        b(i) = - det([1, nj(2:3); ...
                     1, nk(2:3); ...
                     1, nm(2:3);
                     ]);
        c(i) = det([1, nj([1,3]); ...
                     1, nk([1,3]); ...
                     1, nm([1,3]);
                     ]);
        d(i) = - det([1, nj(1:2); ...
                     1, nk(1:2); ...
                     1, nm(1:2);
                     ]);
    end


    ...

    [ii, jj] = meshgrid(el_nodes, el_nodes);
    I{kk} = ii(:); J{kk} = jj(:);
    Aval{kk} = Aloc(:);
    Bval{kk} = Bloc(:);
    Sval{kk} = Sloc(:);
end

A = sparse(cell2mat(I), cell2mat(J), cell2mat(Aval), tot_nodes, tot_nodes);
B = sparse(cell2mat(I), cell2mat(J), cell2mat(Bval), tot_nodes, tot_nodes);
S = sparse(cell2mat(I), cell2mat(J), cell2mat(Sval), tot_nodes, tot_nodes);
